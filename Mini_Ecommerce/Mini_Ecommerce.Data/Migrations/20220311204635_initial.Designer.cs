// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mini_Ecommerce.Data;

#nullable disable

namespace Mini_Ecommerce.Data.Migrations
{
    [DbContext(typeof(Mini_EcommerceContext))]
    [Migration("20220311204635_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = "0390c15b-62b7-454f-9c92-c2d8461cd6cd",
                            CustomerId = 1,
                            HouseNumber = 12,
                            Postcode = "EA3454",
                            Street = "Adeoye street, Ikeja"
                        },
                        new
                        {
                            AddressId = "66b6af22-86c6-4f8e-838f-513fb826d025",
                            CustomerId = 1,
                            HouseNumber = 27,
                            Postcode = "76523",
                            Street = "Femi street, Ajah"
                        },
                        new
                        {
                            AddressId = "28c6c0cc-7aed-4368-b8f3-86f98debd00a",
                            CustomerId = 2,
                            HouseNumber = 12,
                            Postcode = "33455",
                            Street = "Abidjo way, Ajah"
                        },
                        new
                        {
                            AddressId = "601898df-70dc-4404-b1c0-86c11a092d92",
                            CustomerId = 2,
                            HouseNumber = 6,
                            Postcode = "37632",
                            Street = "Bodija-Badoo, Ajah"
                        },
                        new
                        {
                            AddressId = "695a40e1-012e-4df4-a394-f34315337d8b",
                            CustomerId = 3,
                            HouseNumber = 2,
                            Postcode = "EA3454",
                            Street = "Wfurun street, Ijaiye"
                        },
                        new
                        {
                            AddressId = "e0693dfb-933a-4cc0-b980-c0485d5b3ab9",
                            CustomerId = 3,
                            HouseNumber = 13,
                            Postcode = "76523",
                            Street = "Shoprite way, Sangotedo"
                        },
                        new
                        {
                            AddressId = "a98ca8a0-78e8-4e9e-ac21-f1ed7c367890",
                            CustomerId = 4,
                            HouseNumber = 12,
                            Postcode = "EA3454",
                            Street = "Nzumba way, UK"
                        },
                        new
                        {
                            AddressId = "79c569dd-c393-48de-bbd3-f7a99b9ef010",
                            CustomerId = 4,
                            HouseNumber = 23,
                            Postcode = "RT45322",
                            Street = "Bush close, UK"
                        },
                        new
                        {
                            AddressId = "73205b08-9896-4c4f-8f78-f89f3769f027",
                            CustomerId = 5,
                            HouseNumber = 12,
                            Postcode = "EA3454",
                            Street = "Eleganza, Ikeja"
                        },
                        new
                        {
                            AddressId = "97dc4858-f3bc-4a6f-a534-1ad990a194f2",
                            CustomerId = 5,
                            HouseNumber = 27,
                            Postcode = "76523",
                            Street = "Admiraty way, Island"
                        },
                        new
                        {
                            AddressId = "7257850d-9fc2-40b8-9448-097c51d7f3ed",
                            CustomerId = 6,
                            HouseNumber = 10,
                            Postcode = "44556",
                            Street = "Akenbor sokponba Rd"
                        },
                        new
                        {
                            AddressId = "5269b468-2a13-4e08-bb3d-b2ef6868a14f",
                            CustomerId = 6,
                            HouseNumber = 16,
                            Postcode = "76523",
                            Street = "Alonshe close, Benin"
                        },
                        new
                        {
                            AddressId = "6a338737-aec9-46dc-848a-2d9a5ba289b4",
                            CustomerId = 7,
                            HouseNumber = 2,
                            Postcode = "FT2563",
                            Street = "University Road, Yaba"
                        },
                        new
                        {
                            AddressId = "94e8d9c0-6999-456b-b036-9e229410db4a",
                            CustomerId = 7,
                            HouseNumber = 17,
                            Postcode = "88733",
                            Street = "Asanjo way, Ajah"
                        });
                });

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Age = 30,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4802),
                            Gender = 0,
                            Name = "Joshua Gbogodor"
                        },
                        new
                        {
                            CustomerId = 2,
                            Age = 30,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4818),
                            Gender = 1,
                            Name = "Diana Minna"
                        },
                        new
                        {
                            CustomerId = 3,
                            Age = 43,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4819),
                            Gender = 0,
                            Name = "Obinna John"
                        },
                        new
                        {
                            CustomerId = 4,
                            Age = 30,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4820),
                            Gender = 1,
                            Name = "Chizaram Beauty"
                        },
                        new
                        {
                            CustomerId = 5,
                            Age = 45,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4821),
                            Gender = 1,
                            Name = "Ngozi Nneka"
                        },
                        new
                        {
                            CustomerId = 6,
                            Age = 27,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4823),
                            Gender = 0,
                            Name = "Matthew Drone"
                        },
                        new
                        {
                            CustomerId = 7,
                            Age = 36,
                            DateCreated = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(4824),
                            Gender = 0,
                            Name = "Hope Osarobo"
                        });
                });

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = "c5a1a710-f761-41ea-a417-a2abf7705539",
                            Amount = 300m,
                            CustomerId = 1,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5025)
                        },
                        new
                        {
                            OrderId = "c2e7542e-3566-46d5-a0b7-5bafb2d64478",
                            Amount = 4000m,
                            CustomerId = 1,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5030)
                        },
                        new
                        {
                            OrderId = "89f09e75-8f6a-4c7a-9dcc-d9b4b2ec4270",
                            Amount = 7500m,
                            CustomerId = 1,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5032)
                        },
                        new
                        {
                            OrderId = "54c7e83b-a55d-456c-abb5-9812cdfc9a04",
                            Amount = 300m,
                            CustomerId = 2,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5034)
                        },
                        new
                        {
                            OrderId = "7ea43bef-97dd-4335-9c38-f5c88066cd85",
                            Amount = 4000m,
                            CustomerId = 2,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5036)
                        },
                        new
                        {
                            OrderId = "bf329811-282a-4f11-96d0-7a91d4f5c34f",
                            Amount = 7500m,
                            CustomerId = 2,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5040)
                        },
                        new
                        {
                            OrderId = "91663ae9-c2f5-4457-b76e-81b4ce5e0127",
                            Amount = 300m,
                            CustomerId = 3,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5042)
                        },
                        new
                        {
                            OrderId = "ac0cfe31-e43c-4d69-b6c8-0abe941255ba",
                            Amount = 4000m,
                            CustomerId = 3,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5044)
                        },
                        new
                        {
                            OrderId = "8e17e8c6-4d58-407b-87c8-d7961c3657a6",
                            Amount = 7500m,
                            CustomerId = 3,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5046)
                        },
                        new
                        {
                            OrderId = "df62508f-1e0a-4ad2-9ed3-edb926d84811",
                            Amount = 300m,
                            CustomerId = 4,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5049)
                        },
                        new
                        {
                            OrderId = "1871b989-d24b-4711-be89-123617ba4001",
                            Amount = 4000m,
                            CustomerId = 4,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5051)
                        },
                        new
                        {
                            OrderId = "626df4d0-82f5-413d-85c1-3dd2902aba3f",
                            Amount = 6000m,
                            CustomerId = 4,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5052)
                        },
                        new
                        {
                            OrderId = "543e9a40-c3a7-4e16-b932-f715a62f7ae4",
                            Amount = 1000m,
                            CustomerId = 5,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5054)
                        },
                        new
                        {
                            OrderId = "9b700a98-92db-49bd-9315-9b012db646bd",
                            Amount = 450m,
                            CustomerId = 5,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5058)
                        },
                        new
                        {
                            OrderId = "c9f75d31-a184-4d36-b361-0f809ec1cf61",
                            Amount = 800m,
                            CustomerId = 5,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5059)
                        },
                        new
                        {
                            OrderId = "b9a72b04-f647-400b-a6a1-06a05ccecd2a",
                            Amount = 300m,
                            CustomerId = 6,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5061)
                        },
                        new
                        {
                            OrderId = "08086e70-4014-4f2e-80b8-a835d301363f",
                            Amount = 4000m,
                            CustomerId = 6,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5063)
                        },
                        new
                        {
                            OrderId = "e7c5fe0e-83f5-4c84-b31b-cd64ec18c70f",
                            Amount = 7500m,
                            CustomerId = 6,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5066)
                        },
                        new
                        {
                            OrderId = "43230069-d4c8-4568-a1c5-9436b5d15ed8",
                            Amount = 8700m,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5068)
                        },
                        new
                        {
                            OrderId = "2e732db6-1710-46c9-8102-14292c09ccfd",
                            Amount = 1450m,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5070)
                        },
                        new
                        {
                            OrderId = "166df9e4-8942-41e6-92d2-bf1640d89650",
                            Amount = 1500m,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 3, 11, 21, 46, 35, 572, DateTimeKind.Local).AddTicks(5071)
                        });
                });

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Address", b =>
                {
                    b.HasOne("Mini_Ecommerce.Entities.Models.Customer", null)
                        .WithMany("Address")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Order", b =>
                {
                    b.HasOne("Mini_Ecommerce.Entities.Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mini_Ecommerce.Entities.Models.Customer", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
